
interface ProgressTrackable {
    void trackProgress();
}

// Abstract Class
abstract class User {
    private String name;
    private String email;
    private String userId;

    public User(String name, String email, String userId) {
        this.name = name;
        this.email = email;
        this.userId = userId;
    }

    public String getName() { return name; }
    public String getEmail() { return email; }
    public String getUserId() { return userId; }

    public void setName(String name) { this.name = name; }
    public void setEmail(String email) { this.email = email; }
    public void setUserId(String userId) { this.userId = userId; }

    public abstract void viewProfile();

    public final void displayWelcome() {
        System.out.println("Welcome to EduSmart, " + name + "!");
    }
}

// Student Class
class Student extends User implements ProgressTrackable {
    private String enrolledCourse1;
    private String enrolledCourse2;

    public Student(String name, String email, String userId) {
        super(name, email, userId);
        this.enrolledCourse1 = null;
        this.enrolledCourse2 = null;
    }

    // Method Overloading
    public void enrollCourse(String courseName) {
        if (enrolledCourse1 == null) {
            this.enrolledCourse1 = courseName;
            System.out.println(getName() + " enrolled in " + courseName);
        } else if (enrolledCourse2 == null) {
            this.enrolledCourse2 = courseName;
            System.out.println(getName() + " enrolled in " + courseName);
        } else {
            System.out.println("Cannot enroll in more than 2 courses.");
        }
    }

    @Override
    public void viewProfile() {
        System.out.println("Student Profile:");
        System.out.println("Name: " + getName());
        System.out.println("Email: " + getEmail());
        System.out.println("Enrolled Courses: " +
                (enrolledCourse1 != null ? enrolledCourse1 : "None") + ", " +
                (enrolledCourse2 != null ? enrolledCourse2 : "None"));
    }

    @Override
    public void trackProgress() {
        System.out.println(getName() + " is tracking progress...");
    }
}

// Instructor Class
class Instructor extends User {
    private String createdCourse1;
    private String createdCourse2;

    public Instructor(String name, String email, String userId) {
        super(name, email, userId);
        this.createdCourse1 = null;
        this.createdCourse2 = null;
    }

    public void createCourse(String courseName) {
        if (createdCourse1 == null) {
            this.createdCourse1 = courseName;
            System.out.println(getName() + " created course: " + courseName);
        } else if (createdCourse2 == null) {
            this.createdCourse2 = courseName;
            System.out.println(getName() + " created course: " + courseName);
        } else {
            System.out.println("Cannot create more than 2 courses.");
        }
    }

    @Override
    public void viewProfile() {
        System.out.println("Instructor Profile:");
        System.out.println("Name: " + getName());
        System.out.println("Email: " + getEmail());
        System.out.println("Courses Created: " +
                (createdCourse1 != null ? createdCourse1 : "None") + ", " +
                (createdCourse2 != null ? createdCourse2 : "None"));
    }
}

// Admin Class
class Admin extends User {
    public Admin(String name, String email, String userId) {
        super(name, email, userId);
    }

    public void removeUser(User user) {
        System.out.println("Removed user: " + user.getName());
    }

    @Override
    public void viewProfile() {
        System.out.println("Admin Profile:");
        System.out.println("Name: " + getName());
        System.out.println("Email: " + getEmail());
    }
}

// Course Class
class Course {
    private String title;
    private int durationInHours;
    private final int maxStudents;

    // Constructor 1
    public Course(String title, int durationInHours, int maxStudents) {
        this.title = title;
        this.durationInHours = durationInHours;
        this.maxStudents = maxStudents;
    }

    // Constructor 2 (Overloaded)
    public Course(String title) {
        this(title, 0, 50); // Default values
    }

    public void showCourseDetails() {
        System.out.println("Course Title: " + title);
        System.out.println("Duration (hrs): " + durationInHours);
        System.out.println("Max Students: " + maxStudents);
    }
}
